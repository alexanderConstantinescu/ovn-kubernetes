apiVersion: apps/v1
kind: Deployment
metadata:
  name: ovnkube-webhook
  namespace: ovn-kubernetes
  labels:
    app: ovnkube-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ovnkube-webhook
  template:
    metadata:
      labels:
        app: ovnkube-webhook
    spec:
      containers:
      - name: server
        image: "{{ ovn_webhook_image | default('docker.io/ovnkube/ovn-webhook:latest') }}"
        imagePullPolicy: "{{ ovn_image_pull_policy | default('IfNotPresent') }}"
        ports:
        - containerPort: 8443
          name: webhook-api
        volumeMounts:
        - name: webhook-tls-certs
          mountPath: /run/secrets/tls
          readOnly: true
      volumes:
      - name: webhook-tls-certs
        secret:
          secretName: webhook-server-tls
---
apiVersion: v1
kind: Service
metadata:
  name: ovnkube-webhook
  namespace: ovn-kubernetes
spec:
  selector:
    app: ovnkube-webhook
  ports:
    - port: 443
      targetPort: webhook-api
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: ovnkube-admission-webhook
webhooks:
  - name: ovnkube-webhook.ovn-kubernetes.svc
    clientConfig:
      service:
        name: ovnkube-webhook
        namespace: ovn-kubernetes
        path: "/egressip"
      caBundle: "{{ ca_pem_64 }}"
    rules:
      - operations: [ "CREATE" ]
        apiGroups: ["k8s.ovn.org"]
        apiVersions: ["v1"]
        resources: ["egressip", "egressips", "eip"]
        scope: "Cluster"
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
